Changelog for go-dsp-guitar
---------------------------

v1.6.6

Maintenance / bugfixes / corrections:

- Improve handling of RIFF WAVE files to enable correct handling of files which have a 'JUNK' chunk as the first sub-chunk inside the 'RIFF' chunk. Files following the ITU-R recommendation BS.2088-1 will have this layout to allow for on-the-fly upgrade to a file format requiring a larger header, such as RF64 or BW64, without re-writing the actual sample data.
- Correct minimum chunk size for data size chunk for RF64 / BW64 handling.
- Update to latest version of "pure-knob" to fix an issue with touch screen support.
- Fix minor mistakes in documentation.
- Increment patch version number: v1.6.5 --> v1.6.6


v1.6.5

Maintenance / bugfixes / corrections:

- Fix handling of RF64 files.
- Implement handling of BW64 files.
- Increment patch version number: v1.6.4 --> v1.6.5


v1.6.4

Maintenance / bugfixes / corrections:

- Improve handling of file paths and error messages.
- Fix issues with messages and sample rate handling.
- Fix bugs in some tests.
- Improve documentation.
- Update to latest version of "pure-knob".
- Increment patch version number: v1.6.3 --> v1.6.4


v1.6.3

Maintenance / bugfixes / corrections:

- Update the sysroot for our Windows builds with libraries extracted from latest Windows 10 install.
- Increment patch version number: v1.6.2 --> v1.6.3


v1.6.2

Maintenance / bugfixes / corrections:

- Make UI code compatible to ECMAScript 6.
- Update screenshots to include physical units introduced in v1.4.0.
- Increment patch version number: v1.6.1 --> v1.6.2


v1.6.1

Maintenance / bugfixes / corrections:

- Update to latest version of "pure-knob".
- Technical improvements.
- Increment patch version number: v1.6.0 --> v1.6.1


v1.6.0

New features / enhancements:

- Add support for different pre-amplifier valves in the overdrive effects unit.
- Add new auto-yoy effects unit as an envelope-following comb filter.
- Add new cabinet effects unit for guitar cabinet emulation using IIR (infinite impulse response) filters.
- Add facility to enable or disable level meters.
- Update UI code to provide localized strings for the new effects units and parameters.
- Update the documentation to explain the new effects units and features.

Maintenance / bugfixes / corrections:

- Update to latest version of "pure-knob".
- Adopt uniform brace style in UI code and improve a few comments.
- Speed improvements for the oversampling algorithm.
- Automatically trim non-Golang source files during "make fmt" target.
- Increment minor version number: v1.5.1 --> v1.6.0


v1.5.1

Maintenance / bugfixes / corrections:

- Several small optimizations and corrections.
- Make proper use of "fmt.Errorf(...)" function.
- Make use of real FFT / IFFT for reducing filter order.
- Remove now-dead code from filter package.
- Make critical sections in level meters shorter.
- Increase coverage of unit tests for oversampling package.
- Reduce lock contention during FFT.
- Improve code of level meter and spatializer implementation.
- Write new test cases for new multi-channel level meter implementation.
- Clean up other code as a result of the refactoring.
- Make the Fourier transform instantiable to avoid locking permutation buffers.
- Add performance analysis / discussion document.
- Increment patch version number: v1.5.0 --> v1.5.1



v1.5.0

New features / enhancements:

- Implement oversampling for effects making use of non-linear amplification. Oversampling of non-linear processes prevents aliasing distortion.
- Implement new "oversampling" package implementing on-the-fly sample rate conversion, anti-aliasing filters, and decimation.
- Implement unit-tests for the new package.
- Update "excess", "fuzz", "overdrive" and "distortion" effects unit to make use of oversampling and provide a new parameter for it.
- Update UI code to provide localized string for the new parameter.
- Update the documentation to explain the new feature.

Maintenance / bugfixes / corrections:

- Fixed a race condition in the power amplifier simulation. The race condition could lead to incorrect results, especially while batch-processing files.
- Fixed an incorrect length field in the oversampling module leading to incorrect results while processing the first block of audio.
- Increment minor version number: v1.4.0 --> v1.5.0


v1.4.0

New features / enhancements:

- Added support for physical units on numeric parameters.

Maintenance / bugfixes / corrections:

- Update to latest version of "pure-knob".
- Increment minor version number: v1.3.3 --> v1.4.0


v1.3.3

Maintenance / bugfixes / corrections:

- Updated to latest version of "pure-knob".
- Make JavaScript comparison more specific.
- Name all JavaScript event parameters "e".
- Add comment for global variable.
- Several other improvements to the code.
- Increment patch version number: v1.3.2 --> v1.3.3


v1.3.2

Maintenance / bugfixes / corrections:

- Modify Makefile to build optimized as well as unoptimized (*-debug) binaries. Optimized binaries should be used in production as these allow you to achieve much lower latency without audio dropouts. Unoptimized binaries should be used for debugging and for reporting issues.
- Update the changelog.
- Increment patch version number: v1.3.1 --> v1.3.2


v1.3.1

Maintenance / bugfixes / corrections:

- Fix a bug which causes "go-dsp-guitar" to terminate with an index out of bounds exception when batch-processing audio files containing only a single channel.
- Correct compiler flags for go version >= 1.10.
- Fix several issues with the build system when cross-compiling "go-dsp-guitar".
- Correct the changelog.
- Increment patch version number: v1.3.0 --> v1.3.1


v1.3.0

New features / enhancements:

- Implement persistence of user patches to / from JSON files.

Maintenance / bugfixes / corrections:

- Update documentation.
- Fix minor bugs in code.
- Improve code structure.
- Increment minor version number: v1.2.0 --> v1.3.0


v1.2.0

New features / enhancements:

- Add command-line switch to print version information.

Maintenance / bugfixes / corrections:

- Update to latest version of "pure-knob".
- Increment minor version number: v1.1.0 --> v1.2.0


v1.1.0

New features / enhancements:

- Implement new Compressor effects unit as a compressor / limiter. This effects unit is especially suited for vocals, but may also be used on guitar signals.
- Add facility for automatic setup of JACK connections. This feature allows the user to define a list of JACK connections inside the configuration file located at config/config.json. The connections will automatically be established when the application starts in real-time mode. They will not be torn down, when the application exits.
- Implement Reverb effects unit, optimize Delay effects unit. The new Reverb effects unit implements an algorithmic reverberation effect based upon the work of Manfred Schroeder from 1962. The structure of the reverb has been slightly modified from the paper version to include the early reflections from the tapped delay line before they pass through the subsequent allpass filters, into the response.

Maintenance / bugfixes / corrections:

- Fix Makefile target for TLS key generation.
- Update build description in README.md.
- Fix erroneous factor in Phaser module. This makes the behaviour more useful and consistent with that of the Flanger module.
- Introduce new mathematical constant to clean up FFT code.
- Increment minor version number: v1.0.0 --> v1.1.0


v1.0.0

- Reimplement DSP code in Golang using JACK instead of ALSA.
- Implement improved filter simulation using fast convolution.
- Pay attention to the order in which filters were compiled by applying sequence numbers to the data structure in the compilation channel.
- Implement four-band equalizer using IIR filters.
- Implement web-based user interface.
- Fix deadlock, which occurs, when a filter is recompiled while the associated "power amp" effect is in bypass mode.
- Implement metronome.
- Get rid of remaining hard-coded sample rate values in the controller.
- Implement phaser effect.
- Implement auto-wah effect using envelope-follower.
- Optimize the FFT implementation.
   - Optimize generation of Fourier coefficients.
   - Optimize generation of permutation coefficients.
   - Calculate 2N-point FFT of real and/or Hermitian functions using N-point complex FFT.
   - Make use of "math/bits" for bit-level operations. These functions get translated into specialized machine instructions.
- Process all channels concurrently.
- Enable the envelope follower to track RMS power levels instead of peak levels only.
- Implement an instrument tuner based on the auto-correlation function.
- Improve the accuracy of the tuner using quadratic interpolation of the auto-correlation function.
- Enable processing of WAV files for simpler "re-amping".
- Implement support for 64-bit "RF64"-files.
- Replace the legacy "JQuery knob" with "pure-knob".
- Optimize the algorithm for fast convolution for the case that the filter order is smaller than the buffer size.
- Implement a (peak) level meter according to DIN IEC 60268-18.
- Implement a method to change vectorization (frames per period) of the simulation algorithm, allowing the user to trade off simulation complexity (and therefore possible accuracy) and latency.
- Use Lanczos interpolation in the Fourier domain to reduce filter order. This preserves the original frequency response of the filter much better than the previous method while also preserving phase response, minimizing perceived latency.
- Get entirely rid of JQuery as a dependency using an associative data storage backed by a WeakMap instead of the '$(element).data(key, value)' function.
- Implement unit-tests with good coverage for several packages.
   - "circular"
   - "fft"
   - "level"
   - "random"
   - "resample"
   - "tuner"
   - "wave"
- Create user documentation.

